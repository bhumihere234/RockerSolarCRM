// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"                 
  url      = env("DATABASE_URL")     
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String?
  password  String
  role      String   @default("salesperson")
  leads     Lead[]
  dashboard Dashboard?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lead {
  id                     String   @id @default(cuid())

  // Who this lead belongs to
  userId                 String
  user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Personal / contact
  name                   String
  email                  String
  phone                  String
  alternatePhone         String?  // optional

  // Address
  address                String
  city                   String
  state                  String
  pincode                String

  // Professional
  company                String?
  designation            String?

  // Solar requirements
  roofArea               String?
  monthlyBill            String?
  energyRequirement      String?
  roofType               String?
  propertyType           String?


  // Lead info
  leadStatus             String   @default("newlead") // newlead, inprocess, sitevisits, estimatesent, leadwon, etc.
  callStatus             String   @default("followup") // followup, overdue, upcoming
  leadSource             String?
  budget                 String?
  timeline               String?
  priority               String  @default("medium")
  notes                  String?

  // Follow-up
  preferredContactTime   String?
  preferredContactMethod String?  // "phone" | "whatsapp" | "email"
  nextFollowUpDate       DateTime?

  // Site visit
  siteVisitDate          DateTime?

  // Timestamps
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  @@index([userId, name])
  @@index([userId, email])
  @@index([userId, phone])
  @@index([userId, city])
  @@index([userId, company])

  // Call logs
  callLogs               CallLog[]

}


model Dashboard {
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  totalLeads       Int      @default(0)
  overdueCount     Int      @default(0)
  followupCount    Int      @default(0)
  wonCount         Int      @default(0)
  newLeads         Int      @default(0)  // Add this field
  lastCalculatedAt DateTime @default(now())
}


model CallLog {
  id          String   @id @default(cuid())
  leadId      String
  lead        Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  date        DateTime
  duration    Int      // duration in minutes
  notes       String
  action      String?  // e.g. 'Follow-up scheduled', 'Information sent via email'
  createdAt   DateTime @default(now())
}


